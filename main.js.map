{"version":3,"file":"main.js","mappings":"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","sources":["webpack://modern-image-manager/./src/js/loadExistingImages .js","webpack://modern-image-manager/./src/js/checkImageCount.js","webpack://modern-image-manager/./src/js/removeImg.js","webpack://modern-image-manager/./src/js/createNewContainer.js","webpack://modern-image-manager/./src/js/displayImg.js","webpack://modern-image-manager/./src/js/canAddMoreImages.js","webpack://modern-image-manager/./src/js/addImg.js","webpack://modern-image-manager/./src/js/app.js","webpack://modern-image-manager/./src/index.js"],"sourcesContent":["export async function loadExistingImages() {\n    try {\n        const response = await fetch('http://localhost:3000/files');\n        const { files } = await response.json();\n\n        files.forEach(file => {\n            createNewImgContainer(file.id, file.path, file.name);\n        });\n    } catch (error) {\n        console.error(error);\n    }\n};","export async function checkImageCount() { \n    const imagesCount = document.querySelectorAll('.image').length;\n    if (imagesCount >= 10 && preImgContainer) {\n        preImgContainer.remove();\n        preImgContainer = null;\n    } else if (imagesCount < 10 && !preImgContainer) { \n        preImgContainer = document.createElement('div');\n        preImgContainer.classList.add('preimg-container');\n\n        const preImg = document.createElement('div');\n        preImg.classList.add('pre-img');\n        \n        const preButton = document.createElement('button');\n        preButton.classList.add('img-btn');\n        preButton.textContent = 'X';\n\n        preImgContainer.appendChild(preImg);\n        preImgContainer.appendChild(preButton);\n        images.appendChild(preImgContainer);\n    }\n};","import { checkImageCount } from './checkImageCount';\nconst images = document.querySelector('.images');\n\nimages.addEventListener('click', async (e) => {\n    if (e.target.classList.contains('remove-img-btn')) {\n        const imgContainer = e.target.closest('.img-container');\n        const fileId = imgContainer.dataset.id;\n\n        try {\n            const response = await fetch(`http://localhost:3000/files/${fileId}`, {\n                method: 'DELETE',\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to delete image');\n            }\n\n            imgContainer.remove();\n            checkImageCount();\n        } catch (error) {\n            console.error(error);\n        }\n    }\n});","export function createNewImgContainer(id, name, path) {\n    let preImgContainer = document.querySelector('.preimg-container');\n\n    const newImgContainer = document.createElement('div');\n    newImgContainer.classList.add('img-container');\n    newImgContainer.dataset.id = id;\n\n    const imgElement = document.createElement('img');\n    imgElement.src = path;\n    imgElement.dataset.name = name;\n    imgElement.classList.add('image');\n\n    const newButton = document.createElement('button');\n    newButton.classList.add('remove-img-btn', 'img-btn');\n    newButton.textContent = 'X';\n\n    newImgContainer.appendChild(imgElement);\n    newImgContainer.appendChild(newButton);\n\n    preImgContainer.insertAdjacentElement('beforebegin', newImgContainer);\n};","import { createNewImgContainer } from './createNewContainer';\nimport { checkImageCount } from './checkImageCount';\n\nexport async function displayImg(file) {\n    try {\n        console.log('Uploading file:', file); // Логируем файл для проверки\n\n        const formData = new FormData();\n        formData.append('file', file);\n\n        const response = await fetch('http://localhost:3000/files', {\n            method: 'POST',\n            body: formData,\n        });\n\n        if (!response.ok) {\n            throw new Error('Failed to upload image');\n        }\n\n        const { file: uploadedFile } = await response.json();\n        console.log('Uploaded file:', uploadedFile); // Логируем загруженный файл\n\n        createNewImgContainer(uploadedFile.id, uploadedFile.path, uploadedFile.name);\n        checkImageCount();\n    } catch (error) {\n        console.error('Error uploading image:', error);\n    }\n};\n","export function canAddMoreImages() {\n    const imagesCount = document.querySelectorAll('.image').length;\n    return imagesCount < 10;\n};","import { displayImg } from './displayImg';\nimport { canAddMoreImages } from './canAddMoreImages';\n\nconst dndContainer = document.querySelector('.dnd-container');\nconst imgInput = document.querySelector('.input-img');\n\nimgInput.addEventListener('change', (e) => {\n    const files = e.target.files;\n    Array.from(files).forEach((file) => {\n        if (canAddMoreImages()) {\n            displayImg(file).catch(error => {\n                console.error('Error uploading image:', error);\n            });\n        }\n    });\n});\n\ndndContainer.addEventListener('drop', (e) => {\n    e.preventDefault();\n    const files = e.dataTransfer.files;\n    Array.from(files).forEach((file) => {\n        if (canAddMoreImages()) {\n            displayImg(file).catch(error => {\n                console.error('Error uploading image:', error);\n            });\n        }\n    });\n});\n\n","import { loadExistingImages } from './loadExistingImages ';\nimport './removeImg';\nimport './addImg';\n\nloadExistingImages();","import './css/style.css';\nimport './js/app';"],"names":["loadExistingImages","response","fetch","files","json","forEach","file","createNewImgContainer","id","path","name","error","console","checkImageCount","imagesCount","document","querySelectorAll","length","preImgContainer","remove","createElement","classList","add","preImg","preButton","textContent","appendChild","images","querySelector","addEventListener","e","target","contains","imgContainer","closest","fileId","dataset","method","ok","Error","newImgContainer","imgElement","src","newButton","insertAdjacentElement","displayImg","log","formData","FormData","append","body","uploadedFile","canAddMoreImages","dndContainer","imgInput","Array","from","catch","preventDefault","dataTransfer"],"sourceRoot":""}